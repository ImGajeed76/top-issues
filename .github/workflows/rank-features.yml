# .github/workflows/rank-features.yml
name: Rank Feature Requests

on:
  # Run weekly on Sunday at 00:00 UTC (adjust as needed)
  schedule:
    - cron: "0 0 * * 0"
  # Allow manual triggering from the Actions tab
  workflow_dispatch:

# Set default environment variables - users can override these
env:
  FEATURE_LABEL: "feature-request" # Label to identify feature requests
  OUTPUT_FILE: "RANKED_FEATURES.md" # Output Markdown file path
  COMMIT_MESSAGE: "Update ranked features list" # Commit message
  # COMMIT_BRANCH: 'gh-pages' # Optional: Uncomment and set to commit to a different branch

permissions:
  # Required to read issues and their reactions
  issues: read
  # Required to write the results back to the repository
  contents: write

jobs:
  rank_features:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          # Specify Bun version if needed, otherwise uses latest
          # bun-version: latest

      - name: Install Dependencies
        # Only need octokit for the script
        run: bun install @octokit/rest

      - name: Run Ranking Script
        # Pass GitHub token and other env vars to the script
        run: bun run .github/scripts/rank_issues.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Pass other env vars defined at the top level
          FEATURE_LABEL: ${{ env.FEATURE_LABEL }}
          OUTPUT_FILE: ${{ env.OUTPUT_FILE }}
          COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
          COMMIT_BRANCH: ${{ env.COMMIT_BRANCH }} # Will be empty if not set

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.OUTPUT_FILE }}

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          # Determine the branch to commit to
          TARGET_BRANCH=${COMMIT_BRANCH:-${GITHUB_REF#refs/heads/}}
          echo "Committing changes to branch: $TARGET_BRANCH"

          git commit -m "${{ env.COMMIT_MESSAGE }}"

          # Push changes to the target branch
          # Use --force-with-lease if you expect potential conflicts and want safety
          # For simple updates, a direct push is usually fine
          git push origin HEAD:$TARGET_BRANCH

        env:
          # Pass env vars needed specifically for the commit step
          OUTPUT_FILE: ${{ env.OUTPUT_FILE }}
          COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
          COMMIT_BRANCH: ${{ env.COMMIT_BRANCH }}
